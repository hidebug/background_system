<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bms.dao.LessonDao">
    <resultMap id="LessonMap" type="Lesson">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="classroom_id" jdbcType="INTEGER" property="classroomId" />
        <result column="start_time" jdbcType="TIME" property="startTime" />
        <result column="end_time" jdbcType="TIME" property="endTime" />
        <result column="week" jdbcType="VARCHAR" property="week" />
        <result column="campus_id" jdbcType="INTEGER" property="campusId" />
        <result column="create_time" jdbcType="INTEGER" property="createTime" />
        <association property="subject" javaType="Subject">
            <result column="sname" property="name"/>
        </association>
        <association property="user" javaType="User">
            <result column="uname" property="name"/>
        </association>
        <association property="classroom" javaType="Classroom">
            <result column="crname" property="name"/>
        </association>
        <association property="campus" javaType="Campus">
            <result column="cname" property="name"/>
        </association>
    </resultMap>
    <insert id="insertLessons">
        INSERT INTO `lesson`(`subject_id`,`user_id`,`classroom_id`,`start_time`,`end_time`,`week`,`campus_id`,`create_time`)
        VALUES
        <foreach collection="lessons" item="lesson" index="index" separator=",">
            (#{lesson.subjectId},#{lesson.userId},#{lesson.classroomId},#{lesson.startTime},#{lesson.endTime},#{lesson.week},#{lesson.campusId},NOW())
        </foreach>
    </insert>

    <select id="selectLessons" parameterType="Lesson" resultMap="LessonMap">
        SELECT l.id,l.subject_id,l.user_id,l.classroom_id,l.start_time,l.end_time,l.week,l.campus_id,s.name sname,u.name uname,c.name cname,cr.name crname
        FROM lesson l, subject s, user u, campus c, classroom cr
        WHERE l.subject_id = s.id AND l.user_id = u.id AND l.campus_id=c.id AND l.classroom_id=cr.id
        <if test="id != null">
            AND l.id != #{id}
        </if>
        <if test="subjectId != null">
            AND s.id=#{subjectId}
        </if>
        <if test="userId != null">
            AND l.user_id=#{userId}
        </if>
        <if test="classroomId != null">
            AND l.classroom_id=#{classroomId}
        </if>
        <if test="startTime != null and endTime != null">
            AND (l.start_time between  #{startTime} AND #{endTime} OR l.end_time between  #{startTime} AND #{endTime})
        </if>
        <if test="week != null">
            AND l.week=#{week}
        </if>
        <if test="campusId != null">
            AND l.campus_id=#{campusId}
        </if>
        ORDER BY l.id DESC
    </select>

    <select id="selectLessonById" resultMap="LessonMap">
        SELECT id FROM lesson WHERE id=#{id}
    </select>

    <update id="updateLesson" parameterType="Lesson">
        UPDATE lesson
        <set>
            <if test="subjectId != null">
                subject_id = #{subjectId},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="classroomId != null">
                classroom_id = #{classroomId},
            </if>
            <if test="startTime != null">
                start_time = #{startTime},
            </if>
            <if test="endTime != null">
                end_time = #{endTime},
            </if>
            <if test="week != null">
                week = #{week},
            </if>
            <if test="campusId != null">
                campus_id = #{campusId},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteLessons">
        DELETE FROM lesson WHERE id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

</mapper>