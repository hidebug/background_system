<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bms.dao.EmployeeDao">

    <select id="getAllNations" resultType="Nation">
        SELECT id,name FROM nation
    </select>
    <select id="getAllPolitics" resultType="PoliticsStatus">
        SELECT id,name FROM politics_status
    </select>

    <resultMap id="EmployeeMap" type="Employee">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="gender" jdbcType="VARCHAR" property="gender" />
        <result column="birthday" jdbcType="DATE" property="birthday" />
        <result column="idCard" jdbcType="VARCHAR" property="idCard" />
        <result column="wedlock" jdbcType="VARCHAR" property="wedlock" />
        <result column="nationId" jdbcType="INTEGER" property="nationId" />
        <result column="nativePlace" jdbcType="VARCHAR" property="nativePlace" />
        <result column="politicId" jdbcType="INTEGER" property="politicId" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="engageForm" jdbcType="VARCHAR" property="engageForm" />
        <result column="tipTopDegree" jdbcType="VARCHAR" property="tipTopDegree" />
        <result column="specialty" jdbcType="VARCHAR" property="specialty" />
        <result column="school" jdbcType="VARCHAR" property="school" />
        <result column="beginDate" jdbcType="DATE" property="beginDate" />
        <result column="workState" jdbcType="VARCHAR" property="workState" />
        <result column="workId" jdbcType="VARCHAR" property="workId" />
        <result column="contractTerm" jdbcType="DOUBLE" property="contractTerm" />
        <result column="conversionTime" jdbcType="DATE" property="conversionTime" />
        <result column="notWorkDate" jdbcType="DATE" property="notWorkDate" />
        <result column="beginContract" jdbcType="DATE" property="beginContract" />
        <result column="endContract" jdbcType="DATE" property="endContract" />
        <association property="nation" javaType="Nation">
            <id property="id" column="nid"/>
            <result property="name" column="nname"/>
        </association>
        <association property="politicsStatus" javaType="PoliticsStatus">
            <id property="id" column="pid"/>
            <result property="name" column="pname"/>
        </association>
    </resultMap>

    <insert id="insertEmployees" parameterType="Employee">
        INSERT INTO employee (name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email,
        phone, address, engageForm, tipTopDegree, specialty, school, beginDate, workState, workId,
        contractTerm, conversionTime, notWorkDate, beginContract, endContract)
        VALUES
        <foreach collection="employees" item="employee" separator=",">
            (#{employee.name}, #{employee.gender}, #{employee.birthday}, #{employee.idCard},
            #{employee.wedlock}, #{employee.nationId}, #{employee.nativePlace},
            #{employee.politicId}, #{employee.email}, #{employee.phone}, #{employee.address},
            #{employee.engageForm}, #{employee.tipTopDegree}, #{employee.specialty},
            #{employee.school}, #{employee.beginDate}, #{employee.workState}, #{employee.workId}, #{employee.contractTerm},
            #{employee.conversionTime}, #{employee.notWorkDate}, #{employee.beginContract},
            #{employee.endContract})
        </foreach>
    </insert>

    <insert id="insertEmployee" parameterType="Employee">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO employee (name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email,
        phone, address, engageForm, tipTopDegree, specialty, school, beginDate, workState, workId,
        contractTerm, conversionTime, notWorkDate, beginContract, endContract)
        VALUES
        (#{name}, #{gender}, #{birthday}, #{idCard},
        #{wedlock}, #{nationId}, #{nativePlace},
        #{politicId}, #{email}, #{phone}, #{address},
        #{engageForm}, #{tipTopDegree}, #{specialty},
        #{school}, #{beginDate}, #{workState}, #{workId}, #{contractTerm},
        #{conversionTime}, #{notWorkDate}, #{beginContract},
        #{endContract})
    </insert>

    <select id="selectAllEmployees" resultMap="EmployeeMap">
        SELECT e.id, e.name, e.gender, e.birthday, e.idCard, e.wedlock, n.name nname, e.nativePlace, p.name pname, e.email,
            e.phone, e.address, e.engageForm, e.tipTopDegree, e.specialty, e.school, e.beginDate, e.workState, e.workId,
            e.contractTerm, e.conversionTime, e.notWorkDate, e.beginContract, e.endContract
        FROM employee e,nation n, politics_status p
        WHERE e.nationId = n.id AND e.politicId = p.id
    </select>

    <select id="getEmployees" parameterType="com.bms.dto.EmployeeDto" resultMap="EmployeeMap">
        SELECT e.id, e.name, e.gender, e.birthday, e.idCard, e.wedlock, e.nationId, n.name nname, e.nativePlace, e.politicId, p.name pname, e.email,
            e.phone, e.address, e.engageForm, e.tipTopDegree, e.specialty, e.school, e.beginDate, e.workState, e.workId,
            e.contractTerm, e.conversionTime, e.notWorkDate, e.beginContract, e.endContract
        FROM employee e,nation n, politics_status p
        WHERE e.nationId = n.id AND e.politicId = p.id
        <if test="searchWords != null and !&quot;&quot;.equals(searchWords.trim())">
            AND e.name LIKE concat('%', #{searchWords}, '%')
        </if>
        <if test="nationId != null">
            AND e.nationId = #{nationId}
        </if>
        <if test="politicId != null">
            AND e.politicId = #{politicId}
        </if>
        <if test="engageForm != null and !&quot;&quot;.equals(engageForm.trim())">
            AND e.engageForm = #{engageForm}
        </if>
        <if test="startBeginDate != null and endBeginDate != null">
            AND e.beginDate BETWEEN #{startBeginDate} AND #{endBeginDate}
        </if>
        ORDER BY e.id ASC
    </select>

    <delete id="deleteEmployees">
        DELETE FROM employee WHERE id IN
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectEmployee" resultMap="EmployeeMap">
        SELECT id, beginContract, endContract FROM employee
        <trim prefix="WHERE" suffixOverrides="AND">
            <if test="id != null">
                id = #{id} AND
            </if>
            <if test="idCard != null and !&quot;&quot;.equals(idCard.trim())">
                idCard = #{idCard,jdbcType=CHAR} AND
            </if>
        </trim>
    </select>

    <update id="updateEmployee" parameterType="Employee">
        UPDATE employee
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and !&quot;&quot;.equals(name.trim())">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null and !&quot;&quot;.equals(gender.trim())">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="idCard != null and !&quot;&quot;.equals(idCard.trim())">
                idCard = #{idCard,jdbcType=CHAR},
            </if>
            <if test="wedlock != null and !&quot;&quot;.equals(wedlock.trim())">
                wedlock = #{wedlock,jdbcType=CHAR},
            </if>
            <if test="nationId != null">
                nationId = #{nationId,jdbcType=INTEGER},
            </if>
            <if test="nativePlace != null and !&quot;&quot;.equals(nativePlace.trim())">
                nativePlace = #{nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="politicId != null">
                politicId = #{politicId,jdbcType=INTEGER},
            </if>
            <if test="email != null and !&quot;&quot;.equals(email.trim())">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null and !&quot;&quot;.equals(phone.trim())">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null and !&quot;&quot;.equals(address.trim())">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="engageForm != null and !&quot;&quot;.equals(engageForm.trim())">
                engageForm = #{engageForm,jdbcType=VARCHAR},
            </if>
            <if test="tipTopDegree != null and !&quot;&quot;.equals(tipTopDegree.trim())">
                tipTopDegree = #{tipTopDegree,jdbcType=CHAR},
            </if>
            <if test="specialty != null and !&quot;&quot;.equals(specialty.trim())">
                specialty = #{specialty,jdbcType=VARCHAR},
            </if>
            <if test="school != null and !&quot;&quot;.equals(school.trim())">
                school = #{school,jdbcType=VARCHAR},
            </if>
            <if test="beginDate != null">
                beginDate = #{beginDate,jdbcType=DATE},
            </if>
            <if test="workState != null and !&quot;&quot;.equals(workState.trim())">
                workState = #{workState,jdbcType=CHAR},
            </if>
            <if test="contractTerm != null">
                contractTerm = #{contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="conversionTime != null">
                conversionTime = #{conversionTime,jdbcType=DATE},
            </if>
            <if test="notWorkDate != null">
                notWorkDate = #{notWorkDate,jdbcType=DATE},
            </if>
            <if test="beginContract != null">
                beginContract = #{beginContract,jdbcType=DATE},
            </if>
            <if test="endContract != null">
                endContract = #{endContract,jdbcType=DATE},
            </if>
        </trim>
        WHERE id = #{id}
    </update>

    <select id="selectMaxId" resultType="String">
        SELECT workId FROM employee WHERE id = (SELECT max(id) FROM employee)
    </select>

</mapper>